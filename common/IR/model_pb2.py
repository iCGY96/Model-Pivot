# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: model.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='model.proto',
  package='qizhi',
  syntax='proto3',
  serialized_pb=_b('\n\x0bmodel.proto\x12\x05qizhi\"\xd3\x01\n\x05Model\x12\x0f\n\x07version\x18\x01 \x01(\t\x12-\n\x0c\x63ontributors\x18\x08 \x01(\x0b\x32\x17.qizhi.ContributorsList\x12\x16\n\x0e\x66ramework_name\x18\x02 \x01(\t\x12\x19\n\x11\x66ramework_version\x18\x03 \x01(\t\x12\x12\n\nmodel_name\x18\x04 \x01(\t\x12\x15\n\rmodel_version\x18\x05 \x01(\t\x12\x0f\n\x07\x64oc_url\x18\x06 \x01(\t\x12\x1b\n\x05graph\x18\x07 \x01(\x0b\x32\x0c.qizhi.Graph\"B\n\x10\x43ontributorsList\x12\x0c\n\x04name\x18\x01 \x03(\t\x12\r\n\x05\x65mail\x18\x02 \x03(\t\x12\x11\n\tinstitute\x18\x03 \x03(\t\"\"\n\x05Graph\x12\x19\n\x04node\x18\x04 \x03(\x0b\x32\x0b.qizhi.Node\"\xe0\x01\n\x04Node\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08operator\x18\x02 \x01(\t\x12\x12\n\ndoc_string\x18\x03 \x01(\t\x12\x12\n\ndefinition\x18\x04 \x01(\t\x12\r\n\x05input\x18\x05 \x03(\t\x12\x0e\n\x06output\x18\x06 \x03(\t\x12-\n\tattribute\x18\x07 \x03(\x0b\x32\x1a.qizhi.Node.AttributeEntry\x1a\x42\n\x0e\x41ttributeEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1f\n\x05value\x18\x02 \x01(\x0b\x32\x10.qizhi.Attribute:\x02\x38\x01\"\x95\x02\n\tAttribute\x12*\n\x04list\x18\x01 \x01(\x0b\x32\x1a.qizhi.Attribute.ListValueH\x00\x12\x1a\n\x03val\x18\x02 \x01(\x0b\x32\x0b.qizhi.TypeH\x00\x1a\xb6\x01\n\tListValue\x12\t\n\x01s\x18\x02 \x03(\t\x12\r\n\x01i\x18\x03 \x03(\x03\x42\x02\x10\x01\x12\r\n\x01\x66\x18\x04 \x03(\x02\x42\x02\x10\x01\x12\r\n\x01\x62\x18\x05 \x03(\x08\x42\x02\x10\x01\x12\"\n\x04type\x18\x06 \x03(\x0e\x32\x10.qizhi.ValueTypeB\x02\x10\x01\x12!\n\x05shape\x18\x07 \x03(\x0b\x32\x12.qizhi.TensorShape\x12\x1d\n\x06tensor\x18\x08 \x03(\x0b\x32\r.qizhi.Tensor\x12\x0b\n\x03\x62it\x18\t \x03(\x0c\x42\x07\n\x05value\"\xb2\x01\n\x04Type\x12\x0b\n\x01i\x18\x01 \x01(\x03H\x00\x12\x0b\n\x01\x66\x18\x02 \x01(\x02H\x00\x12\x0b\n\x01s\x18\x03 \x01(\tH\x00\x12\x0b\n\x01\x62\x18\x04 \x01(\x08H\x00\x12\x1d\n\x01v\x18\x05 \x01(\x0e\x32\x10.qizhi.ValueTypeH\x00\x12\x1a\n\x01t\x18\x06 \x01(\x0b\x32\r.qizhi.TensorH\x00\x12#\n\x05shape\x18\x07 \x01(\x0b\x32\x12.qizhi.TensorShapeH\x00\x12\r\n\x03\x62it\x18\x08 \x01(\x0cH\x00\x42\x07\n\x05value\"\xba\x02\n\x06Tensor\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\t\x12!\n\x05shape\x18\x03 \x01(\x0b\x32\x12.qizhi.TensorShape\x12\x1e\n\x04type\x18\x04 \x01(\x0e\x32\x10.qizhi.ValueType\x12\x0f\n\x07\x63ontent\x18\r \x01(\x0c\x12\x16\n\nint32_data\x18\x05 \x03(\x05\x42\x02\x10\x01\x12\x17\n\x0buint32_data\x18\x06 \x03(\x05\x42\x02\x10\x01\x12\x16\n\nint64_data\x18\x07 \x03(\x03\x42\x02\x10\x01\x12\x17\n\x0buint64_data\x18\x08 \x03(\x03\x42\x02\x10\x01\x12\x16\n\nfloat_data\x18\t \x03(\x02\x42\x02\x10\x01\x12\x17\n\x0b\x64ouble_data\x18\n \x03(\x01\x42\x02\x10\x01\x12\x15\n\tbool_data\x18\x0b \x03(\x08\x42\x02\x10\x01\x12\x13\n\x0bstring_data\x18\x0c \x03(\x0c\"r\n\x0bTensorShape\x12)\n\x03\x64im\x18\x02 \x03(\x0b\x32\x1c.qizhi.TensorShape.dimension\x12\x0f\n\x07unknown\x18\x03 \x01(\x08\x1a\'\n\tdimension\x12\x0c\n\x04size\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t*\xd0\x01\n\tValueType\x12\r\n\tUNDEFINED\x10\x00\x12\x08\n\x04INT8\x10\x01\x12\t\n\x05INT16\x10\x02\x12\t\n\x05INT32\x10\x03\x12\t\n\x05INT64\x10\x04\x12\t\n\x05UINT8\x10\x05\x12\n\n\x06UINT16\x10\x06\x12\n\n\x06UINT32\x10\x07\x12\n\n\x06UINT64\x10\x08\x12\x0b\n\x07\x46LOAT16\x10\t\x12\x0b\n\x07\x46LOAT32\x10\n\x12\x0b\n\x07\x46LOAT64\x10\x0b\x12\x08\n\x04\x42OOL\x10\x0c\x12\n\n\x06STRING\x10\r\x12\r\n\tCOMPLEX64\x10\x0e\x12\x0e\n\nCOMPLEX128\x10\x0f\x62\x06proto3')
)

_VALUETYPE = _descriptor.EnumDescriptor(
  name='ValueType',
  full_name='qizhi.ValueType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNDEFINED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT8', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT16', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT32', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT64', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT8', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT16', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT64', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT16', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT32', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT64', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BOOL', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STRING', index=13, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMPLEX64', index=14, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMPLEX128', index=15, number=15,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1462,
  serialized_end=1670,
)
_sym_db.RegisterEnumDescriptor(_VALUETYPE)

ValueType = enum_type_wrapper.EnumTypeWrapper(_VALUETYPE)
UNDEFINED = 0
INT8 = 1
INT16 = 2
INT32 = 3
INT64 = 4
UINT8 = 5
UINT16 = 6
UINT32 = 7
UINT64 = 8
FLOAT16 = 9
FLOAT32 = 10
FLOAT64 = 11
BOOL = 12
STRING = 13
COMPLEX64 = 14
COMPLEX128 = 15



_MODEL = _descriptor.Descriptor(
  name='Model',
  full_name='qizhi.Model',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='version', full_name='qizhi.Model.version', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='contributors', full_name='qizhi.Model.contributors', index=1,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='framework_name', full_name='qizhi.Model.framework_name', index=2,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='framework_version', full_name='qizhi.Model.framework_version', index=3,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='model_name', full_name='qizhi.Model.model_name', index=4,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='model_version', full_name='qizhi.Model.model_version', index=5,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='doc_url', full_name='qizhi.Model.doc_url', index=6,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='graph', full_name='qizhi.Model.graph', index=7,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23,
  serialized_end=234,
)


_CONTRIBUTORSLIST = _descriptor.Descriptor(
  name='ContributorsList',
  full_name='qizhi.ContributorsList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='qizhi.ContributorsList.name', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='email', full_name='qizhi.ContributorsList.email', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='institute', full_name='qizhi.ContributorsList.institute', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=236,
  serialized_end=302,
)


_GRAPH = _descriptor.Descriptor(
  name='Graph',
  full_name='qizhi.Graph',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node', full_name='qizhi.Graph.node', index=0,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=304,
  serialized_end=338,
)


_NODE_ATTRIBUTEENTRY = _descriptor.Descriptor(
  name='AttributeEntry',
  full_name='qizhi.Node.AttributeEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='qizhi.Node.AttributeEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='qizhi.Node.AttributeEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=499,
  serialized_end=565,
)

_NODE = _descriptor.Descriptor(
  name='Node',
  full_name='qizhi.Node',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='qizhi.Node.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='operator', full_name='qizhi.Node.operator', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='doc_string', full_name='qizhi.Node.doc_string', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='definition', full_name='qizhi.Node.definition', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='input', full_name='qizhi.Node.input', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='output', full_name='qizhi.Node.output', index=5,
      number=6, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attribute', full_name='qizhi.Node.attribute', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_NODE_ATTRIBUTEENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=341,
  serialized_end=565,
)


_ATTRIBUTE_LISTVALUE = _descriptor.Descriptor(
  name='ListValue',
  full_name='qizhi.Attribute.ListValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='s', full_name='qizhi.Attribute.ListValue.s', index=0,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='i', full_name='qizhi.Attribute.ListValue.i', index=1,
      number=3, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='f', full_name='qizhi.Attribute.ListValue.f', index=2,
      number=4, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='b', full_name='qizhi.Attribute.ListValue.b', index=3,
      number=5, type=8, cpp_type=7, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='type', full_name='qizhi.Attribute.ListValue.type', index=4,
      number=6, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='shape', full_name='qizhi.Attribute.ListValue.shape', index=5,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tensor', full_name='qizhi.Attribute.ListValue.tensor', index=6,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bit', full_name='qizhi.Attribute.ListValue.bit', index=7,
      number=9, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=654,
  serialized_end=836,
)

_ATTRIBUTE = _descriptor.Descriptor(
  name='Attribute',
  full_name='qizhi.Attribute',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='list', full_name='qizhi.Attribute.list', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='val', full_name='qizhi.Attribute.val', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ATTRIBUTE_LISTVALUE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='qizhi.Attribute.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=568,
  serialized_end=845,
)


_TYPE = _descriptor.Descriptor(
  name='Type',
  full_name='qizhi.Type',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='i', full_name='qizhi.Type.i', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='f', full_name='qizhi.Type.f', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='s', full_name='qizhi.Type.s', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='b', full_name='qizhi.Type.b', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='v', full_name='qizhi.Type.v', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='t', full_name='qizhi.Type.t', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shape', full_name='qizhi.Type.shape', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bit', full_name='qizhi.Type.bit', index=7,
      number=8, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='qizhi.Type.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=848,
  serialized_end=1026,
)


_TENSOR = _descriptor.Descriptor(
  name='Tensor',
  full_name='qizhi.Tensor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='qizhi.Tensor.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='version', full_name='qizhi.Tensor.version', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shape', full_name='qizhi.Tensor.shape', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='qizhi.Tensor.type', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='content', full_name='qizhi.Tensor.content', index=4,
      number=13, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='int32_data', full_name='qizhi.Tensor.int32_data', index=5,
      number=5, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='uint32_data', full_name='qizhi.Tensor.uint32_data', index=6,
      number=6, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='int64_data', full_name='qizhi.Tensor.int64_data', index=7,
      number=7, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='uint64_data', full_name='qizhi.Tensor.uint64_data', index=8,
      number=8, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='float_data', full_name='qizhi.Tensor.float_data', index=9,
      number=9, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='double_data', full_name='qizhi.Tensor.double_data', index=10,
      number=10, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='bool_data', full_name='qizhi.Tensor.bool_data', index=11,
      number=11, type=8, cpp_type=7, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='string_data', full_name='qizhi.Tensor.string_data', index=12,
      number=12, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1029,
  serialized_end=1343,
)


_TENSORSHAPE_DIMENSION = _descriptor.Descriptor(
  name='dimension',
  full_name='qizhi.TensorShape.dimension',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='size', full_name='qizhi.TensorShape.dimension.size', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='qizhi.TensorShape.dimension.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1420,
  serialized_end=1459,
)

_TENSORSHAPE = _descriptor.Descriptor(
  name='TensorShape',
  full_name='qizhi.TensorShape',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dim', full_name='qizhi.TensorShape.dim', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unknown', full_name='qizhi.TensorShape.unknown', index=1,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_TENSORSHAPE_DIMENSION, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1345,
  serialized_end=1459,
)

_MODEL.fields_by_name['contributors'].message_type = _CONTRIBUTORSLIST
_MODEL.fields_by_name['graph'].message_type = _GRAPH
_GRAPH.fields_by_name['node'].message_type = _NODE
_NODE_ATTRIBUTEENTRY.fields_by_name['value'].message_type = _ATTRIBUTE
_NODE_ATTRIBUTEENTRY.containing_type = _NODE
_NODE.fields_by_name['attribute'].message_type = _NODE_ATTRIBUTEENTRY
_ATTRIBUTE_LISTVALUE.fields_by_name['type'].enum_type = _VALUETYPE
_ATTRIBUTE_LISTVALUE.fields_by_name['shape'].message_type = _TENSORSHAPE
_ATTRIBUTE_LISTVALUE.fields_by_name['tensor'].message_type = _TENSOR
_ATTRIBUTE_LISTVALUE.containing_type = _ATTRIBUTE
_ATTRIBUTE.fields_by_name['list'].message_type = _ATTRIBUTE_LISTVALUE
_ATTRIBUTE.fields_by_name['val'].message_type = _TYPE
_ATTRIBUTE.oneofs_by_name['value'].fields.append(
  _ATTRIBUTE.fields_by_name['list'])
_ATTRIBUTE.fields_by_name['list'].containing_oneof = _ATTRIBUTE.oneofs_by_name['value']
_ATTRIBUTE.oneofs_by_name['value'].fields.append(
  _ATTRIBUTE.fields_by_name['val'])
_ATTRIBUTE.fields_by_name['val'].containing_oneof = _ATTRIBUTE.oneofs_by_name['value']
_TYPE.fields_by_name['v'].enum_type = _VALUETYPE
_TYPE.fields_by_name['t'].message_type = _TENSOR
_TYPE.fields_by_name['shape'].message_type = _TENSORSHAPE
_TYPE.oneofs_by_name['value'].fields.append(
  _TYPE.fields_by_name['i'])
_TYPE.fields_by_name['i'].containing_oneof = _TYPE.oneofs_by_name['value']
_TYPE.oneofs_by_name['value'].fields.append(
  _TYPE.fields_by_name['f'])
_TYPE.fields_by_name['f'].containing_oneof = _TYPE.oneofs_by_name['value']
_TYPE.oneofs_by_name['value'].fields.append(
  _TYPE.fields_by_name['s'])
_TYPE.fields_by_name['s'].containing_oneof = _TYPE.oneofs_by_name['value']
_TYPE.oneofs_by_name['value'].fields.append(
  _TYPE.fields_by_name['b'])
_TYPE.fields_by_name['b'].containing_oneof = _TYPE.oneofs_by_name['value']
_TYPE.oneofs_by_name['value'].fields.append(
  _TYPE.fields_by_name['v'])
_TYPE.fields_by_name['v'].containing_oneof = _TYPE.oneofs_by_name['value']
_TYPE.oneofs_by_name['value'].fields.append(
  _TYPE.fields_by_name['t'])
_TYPE.fields_by_name['t'].containing_oneof = _TYPE.oneofs_by_name['value']
_TYPE.oneofs_by_name['value'].fields.append(
  _TYPE.fields_by_name['shape'])
_TYPE.fields_by_name['shape'].containing_oneof = _TYPE.oneofs_by_name['value']
_TYPE.oneofs_by_name['value'].fields.append(
  _TYPE.fields_by_name['bit'])
_TYPE.fields_by_name['bit'].containing_oneof = _TYPE.oneofs_by_name['value']
_TENSOR.fields_by_name['shape'].message_type = _TENSORSHAPE
_TENSOR.fields_by_name['type'].enum_type = _VALUETYPE
_TENSORSHAPE_DIMENSION.containing_type = _TENSORSHAPE
_TENSORSHAPE.fields_by_name['dim'].message_type = _TENSORSHAPE_DIMENSION
DESCRIPTOR.message_types_by_name['Model'] = _MODEL
DESCRIPTOR.message_types_by_name['ContributorsList'] = _CONTRIBUTORSLIST
DESCRIPTOR.message_types_by_name['Graph'] = _GRAPH
DESCRIPTOR.message_types_by_name['Node'] = _NODE
DESCRIPTOR.message_types_by_name['Attribute'] = _ATTRIBUTE
DESCRIPTOR.message_types_by_name['Type'] = _TYPE
DESCRIPTOR.message_types_by_name['Tensor'] = _TENSOR
DESCRIPTOR.message_types_by_name['TensorShape'] = _TENSORSHAPE
DESCRIPTOR.enum_types_by_name['ValueType'] = _VALUETYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Model = _reflection.GeneratedProtocolMessageType('Model', (_message.Message,), dict(
  DESCRIPTOR = _MODEL,
  __module__ = 'model_pb2'
  # @@protoc_insertion_point(class_scope:qizhi.Model)
  ))
_sym_db.RegisterMessage(Model)

ContributorsList = _reflection.GeneratedProtocolMessageType('ContributorsList', (_message.Message,), dict(
  DESCRIPTOR = _CONTRIBUTORSLIST,
  __module__ = 'model_pb2'
  # @@protoc_insertion_point(class_scope:qizhi.ContributorsList)
  ))
_sym_db.RegisterMessage(ContributorsList)

Graph = _reflection.GeneratedProtocolMessageType('Graph', (_message.Message,), dict(
  DESCRIPTOR = _GRAPH,
  __module__ = 'model_pb2'
  # @@protoc_insertion_point(class_scope:qizhi.Graph)
  ))
_sym_db.RegisterMessage(Graph)

Node = _reflection.GeneratedProtocolMessageType('Node', (_message.Message,), dict(

  AttributeEntry = _reflection.GeneratedProtocolMessageType('AttributeEntry', (_message.Message,), dict(
    DESCRIPTOR = _NODE_ATTRIBUTEENTRY,
    __module__ = 'model_pb2'
    # @@protoc_insertion_point(class_scope:qizhi.Node.AttributeEntry)
    ))
  ,
  DESCRIPTOR = _NODE,
  __module__ = 'model_pb2'
  # @@protoc_insertion_point(class_scope:qizhi.Node)
  ))
_sym_db.RegisterMessage(Node)
_sym_db.RegisterMessage(Node.AttributeEntry)

Attribute = _reflection.GeneratedProtocolMessageType('Attribute', (_message.Message,), dict(

  ListValue = _reflection.GeneratedProtocolMessageType('ListValue', (_message.Message,), dict(
    DESCRIPTOR = _ATTRIBUTE_LISTVALUE,
    __module__ = 'model_pb2'
    # @@protoc_insertion_point(class_scope:qizhi.Attribute.ListValue)
    ))
  ,
  DESCRIPTOR = _ATTRIBUTE,
  __module__ = 'model_pb2'
  # @@protoc_insertion_point(class_scope:qizhi.Attribute)
  ))
_sym_db.RegisterMessage(Attribute)
_sym_db.RegisterMessage(Attribute.ListValue)

Type = _reflection.GeneratedProtocolMessageType('Type', (_message.Message,), dict(
  DESCRIPTOR = _TYPE,
  __module__ = 'model_pb2'
  # @@protoc_insertion_point(class_scope:qizhi.Type)
  ))
_sym_db.RegisterMessage(Type)

Tensor = _reflection.GeneratedProtocolMessageType('Tensor', (_message.Message,), dict(
  DESCRIPTOR = _TENSOR,
  __module__ = 'model_pb2'
  # @@protoc_insertion_point(class_scope:qizhi.Tensor)
  ))
_sym_db.RegisterMessage(Tensor)

TensorShape = _reflection.GeneratedProtocolMessageType('TensorShape', (_message.Message,), dict(

  dimension = _reflection.GeneratedProtocolMessageType('dimension', (_message.Message,), dict(
    DESCRIPTOR = _TENSORSHAPE_DIMENSION,
    __module__ = 'model_pb2'
    # @@protoc_insertion_point(class_scope:qizhi.TensorShape.dimension)
    ))
  ,
  DESCRIPTOR = _TENSORSHAPE,
  __module__ = 'model_pb2'
  # @@protoc_insertion_point(class_scope:qizhi.TensorShape)
  ))
_sym_db.RegisterMessage(TensorShape)
_sym_db.RegisterMessage(TensorShape.dimension)


_NODE_ATTRIBUTEENTRY.has_options = True
_NODE_ATTRIBUTEENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_ATTRIBUTE_LISTVALUE.fields_by_name['i'].has_options = True
_ATTRIBUTE_LISTVALUE.fields_by_name['i']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_ATTRIBUTE_LISTVALUE.fields_by_name['f'].has_options = True
_ATTRIBUTE_LISTVALUE.fields_by_name['f']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_ATTRIBUTE_LISTVALUE.fields_by_name['b'].has_options = True
_ATTRIBUTE_LISTVALUE.fields_by_name['b']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_ATTRIBUTE_LISTVALUE.fields_by_name['type'].has_options = True
_ATTRIBUTE_LISTVALUE.fields_by_name['type']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['int32_data'].has_options = True
_TENSOR.fields_by_name['int32_data']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['uint32_data'].has_options = True
_TENSOR.fields_by_name['uint32_data']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['int64_data'].has_options = True
_TENSOR.fields_by_name['int64_data']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['uint64_data'].has_options = True
_TENSOR.fields_by_name['uint64_data']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['float_data'].has_options = True
_TENSOR.fields_by_name['float_data']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['double_data'].has_options = True
_TENSOR.fields_by_name['double_data']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['bool_data'].has_options = True
_TENSOR.fields_by_name['bool_data']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
# @@protoc_insertion_point(module_scope)
